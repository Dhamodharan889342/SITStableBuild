<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>49.0</apiVersion>
    <assignments>
        <name>varJobOrderId</name>
        <label>varJobOrderId</label>
        <locationX>525</locationX>
        <locationY>258</locationY>
        <assignmentItems>
            <assignToReference>$Flow.CurrentRecord</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>getServiceResource</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>checkjoborderstatus</name>
        <label>checkjoborderstatus</label>
        <locationX>285</locationX>
        <locationY>256</locationY>
        <defaultConnector>
            <targetReference>varJobOrderId</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>joborderstatusisCompleted</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>jobOrderRecordID</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>StatusofJobOrderisCompleted</targetReference>
            </connector>
            <label>joborderstatusisCompleted</label>
        </rules>
    </decisions>
    <description>This flow is associated with Start button on Job Order Object</description>
    <interviewLabel>AfterSales_JobOrder_Done_ProcessFlow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>AfterSales_JobOrder_Start_ProcessFlow</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <description>This will create the Job Order clocking record</description>
        <name>CreateJobOrderClocking</name>
        <label>CreateJobOrderClocking</label>
        <locationX>665</locationX>
        <locationY>439</locationY>
        <connector>
            <targetReference>screenJobOrderClockingStarted</targetReference>
        </connector>
        <inputAssignments>
            <field>JobOrder__c</field>
            <value>
                <elementReference>$Flow.CurrentRecord</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ServiceResource__c</field>
            <value>
                <elementReference>varServiceResourceUserId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>StartTime__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <object>JobOrderClocking__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>getJobOrderRecord</name>
        <label>getJobOrderRecord</label>
        <locationX>156</locationX>
        <locationY>254</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>checkjoborderstatus</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3 OR 4)</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Closed</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Canceled</stringValue>
            </value>
        </filters>
        <object>WorkOrder</object>
        <outputAssignments>
            <assignToReference>jobOrderRecordID</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <description>This method will get the Service Resource of the current user in context</description>
        <name>getServiceResource</name>
        <label>getServiceResource</label>
        <locationX>525</locationX>
        <locationY>439</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CreateJobOrderClocking</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>RelatedRecordId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </filters>
        <object>ServiceResource</object>
        <outputAssignments>
            <assignToReference>varServiceResourceUserId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <screens>
        <description>This screen will be shown when Start job order clocking is finished.</description>
        <name>screenJobOrderClockingStarted</name>
        <label>screenJobOrderClockingStarted</label>
        <locationX>666</locationX>
        <locationY>615</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>varStartJobOrderClockingFinished</name>
            <fieldText>&lt;p&gt;{!varJobOrderClockingFinalScreen}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>StatusofJobOrderisCompleted</name>
        <label>StatusofJobOrderisCompleted</label>
        <locationX>291</locationX>
        <locationY>428</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>varJobOrderStatusCompletedRecord</name>
            <fieldText>&lt;p&gt;{!statuscompletd}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>26</locationX>
        <locationY>52</locationY>
        <connector>
            <targetReference>getJobOrderRecord</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>JobOrder</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>WorkOrder</objectType>
    </variables>
    <variables>
        <name>jobOrderRecordID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>This variable will hold the record id of the Job order record in current context</description>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>statuscompletd</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Clock should not start when Job Order is Completed,Cancelled and Closed</stringValue>
        </value>
    </variables>
    <variables>
        <name>varJobOrder</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>This message is show at the end of the &quot;Start&quot; job order clocking flow.</description>
        <name>varJobOrderClockingFinalScreen</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Job Order Clocking has Started</stringValue>
        </value>
    </variables>
    <variables>
        <description>This variable holds the service resource ID of the current user</description>
        <name>varServiceResourceUserId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>This field will hold the value of Service User Id</description>
        <name>varServiceUserId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
